{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates CodePipeline for Database Migration Service task automation",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Database Migration Service Endpoints"
                    },
                    "Parameters": [
                        "pDmsSourceArn",
                        "pDmsTargetArn",
                        "pDmsReplicationArn",
                        "pTaskName"
                    ]
                },
                {
                    "Label": {
                        "default": "Target RDS Access and Credentials"
                    },
                    "Parameters": [
                        "pRDSEndpoint",
                        "pRDSName",
                        "pRDSUser",
                        "pRDSPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "CodeBuild Configuration and Environment"
                    },
                    "Parameters": [
                        "pCodeBuildSecurityGroup",
                        "pCodeBuildSubnet",
                        "pCodeBuildVPC"
                    ]
                },
                {
                    "Label": {
                        "default": "CodePipeline Source Configuration"
                    },
                    "Parameters": [
                        "pS3BucketName",
                        "pS3BucketKey"
                    ]
                }
            ],
            "ParameterLabels": {
                "pTaskName": {
                    "default": "DMS Task Name"
                },
                "pCodeBuildVPC": {
                    "default": "VPC used by CodeBuild"
                },
                "pCodeBuildSubnet": {
                    "default": "SubnetID"
                },
                "pCodeBuildSecurityGroup": {
                    "default": "Security Group"
                },
                "pS3BucketName": {
                    "default": "S3 Bucket"
                },
                "pS3BucketKey": {
                    "default": "S3 Key"
                },
                "pRDSEndpoint": {
                    "default": "RDS Endpoint"
                },
                "pRDSName": {
                    "default": "Database Name"
                },
                "pRDSUser": {
                    "default": "Database Username"
                },
                "pRDSPassword": {
                    "default": "Database Password"
                },
                "pDmsSourceArn": {
                    "default": "Source Endpoint Arn"
                },
                "pDmsTargetArn": {
                    "default": "Target Endpoint Arn"
                },
                "pDmsReplicationArn": {
                    "default": "Replication instance Arn"
                }
            }
        }
    },
    "Parameters": {
        "pCodeBuildSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "sg-3bbe8340",
            "Description": "Security group used by CodeBuild. Please ensure that this has access to RDS endpoint"
        },
        "pCodeBuildSubnet": {
            "Type": "AWS::EC2::Subnet::Id",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "subnet-0ef8b005e941e74ad",
            "Description": "Private subnet id with NAT gateway where codebuild will be launched"
        },
        "pCodeBuildVPC": {
            "Type": "AWS::EC2::VPC::Id",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "vpc-f7faf790",
            "Description": "VPC Id where codebuild will be launched. Subnet and security group should belong to this VPC."
        },
        "pS3BucketKey": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "test.zip",
            "Description": "The location of file which is used as source for CodePipeline"
        },
        "pS3BucketName": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "test-bucket-dms-12341234",
            "Description": "The name of the S3 bucket where the code resides. This will be used as source for the CodePipeline"
        },
        "pRDSEndpoint": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "targetdb02.cmbi8axdpp1y.us-west-2.rds.amazonaws.com",
            "Description": "RDS endpoint where the schema changes will take place"
        },
        "pRDSName": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "postgres",
            "Description": "RDS database name for deployments"
        },
        "pRDSPassword": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "Passw0rd",
            "Description": "The database user password for deployment",
            "NoEcho": "true"
        },
        "pTaskName": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "dmstask",
            "Description": "Name of DMS task"
        },
        "pDmsSourceArn": {
            "Type": "String",
            "Default": "arn:aws:dms:us-west-2:585635073851:endpoint:NAW4AYJEWX3RQ7S2AQI24ZXQSE",
            "Description": "Arn of source endpoint which was successfully tested with replication instance"
        },
        "pDmsTargetArn": {
            "Type": "String",
            "Default": "arn:aws:dms:us-west-2:585635073851:endpoint:CA53XPQ2V5JL3BDZ3HXKFTYCEQ",
            "Description": "Arn of source endpoint which was successfully tested with replication instance"
        },
        "pDmsReplicationArn": {
            "Type": "String",
            "Default": "arn:aws:dms:us-west-2:585635073851:rep:44UY2L4OCXUC6SMEF7AAHUILNQ",
            "Description": "Arn of replication instance used for migration"
        },
        "pRDSUser": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9-\\-_.]{3,63}",
            "Default": "master",
            "Description": "RDS database user name"
        }
    },
    "Resources": {
        "rAppPipeline": {
            "Type": "AWS::CodePipeline::Pipeline",
            "Properties": {
                "ArtifactStore": {
                    "Location": {
                        "Ref": "rArtifactStoreS3Location"
                    },
                    "Type": "S3"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "rAppPipelineRole",
                        "Arn"
                    ]
                },
                "Stages": [
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Source",
                                    "Owner": "AWS",
                                    "Provider": "S3",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "PollForSourceChanges": true,
                                    "S3Bucket": {
                                        "Ref": "pS3BucketName"
                                    },
                                    "S3ObjectKey": {
                                        "Ref": "pS3BucketKey"
                                    }
                                },
                                "Name": "Source",
                                "OutputArtifacts": [
                                    {
                                        "Name": "AppSource"
                                    }
                                ],
                                "RunOrder": 1
                            }
                        ],
                        "Name": "Source"
                    },
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Build",
                                    "Owner": "AWS",
                                    "Provider": "CodeBuild",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "ProjectName": {
                                        "Ref": "rApplicationCodeBuild"
                                    }
                                },
                                "InputArtifacts": [
                                    {
                                        "Name": "AppSource"
                                    }
                                ],
                                "Name": "SetupTarget",
                                "OutputArtifacts": [
                                    {
                                        "Name": "AppBuild"
                                    }
                                ],
                                "RunOrder": 1
                            }
                        ],
                        "Name": "Setup"
                    },
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Approval",
                                    "Owner": "AWS",
                                    "Provider": "Manual",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "NotificationArn": {
                                        "Ref": "rSnsApproval"
                                    }
                                },
                                "Name": "ApprovalForDMS",
                                "RunOrder": 1
                            }
                        ],
                        "Name": "Approve"
                    },
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Build",
                                    "Owner": "AWS",
                                    "Provider": "CodeBuild",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "ProjectName": {
                                        "Ref": "rApplicationCodeBuildProd"
                                    }
                                },
                                "InputArtifacts": [
                                    {
                                        "Name": "AppSource"
                                    }
                                ],
                                "Name": "SetupTarget",
                                "RunOrder": 1
                            }
                        ],
                        "Name": "PreCDC"
                    }
                ]
            }
        },
        "rAppPipelineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codepipeline.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "codepipeline-${AWS::StackName}-${AWS::Region}-policy"
                        },
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:*",
                                        "sns:*",
                                        "sqs:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "codebuild:BatchGetBuilds",
                                        "codebuild:StartBuild"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "rApplicationCodeBuild": {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
                "Artifacts": {
                    "Type": "CODEPIPELINE"
                },
                "Description": "A description about my project",
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "EnvironmentVariables": [
                        {
                            "Name": "PGPASSWORD",
                            "Type": "PARAMETER_STORE",
                            "Value": {
                                "Ref": "rApplicationpRdsPassword"
                            }
                        },
                        {
                            "Name": "DB_NAME",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pRDSName"
                            }
                        },
                        {
                            "Name": "TARGET_ENDPOINT",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pRDSEndpoint"
                            }
                        },
                        {
                            "Name": "DB_USER",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pRDSUser"
                            }
                        },
                        {
                            "Name": "TASK_NAME",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pTaskName"
                            }
                        },
                        {
                            "Name": "SOURCE_ENDPOINT_ARN",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pDmsSourceArn"
                            }
                        },
                        {
                            "Name": "TARGET_ENDPOINT_ARN",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pDmsTargetArn"
                            }
                        },
                        {
                            "Name": "REPLICATION_INSTANCE_ARN",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pDmsReplicationArn"
                            }
                        },
                        {
                            "Name": "SNS_TOPIC",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "rSnsApproval"
                            }
                        }
                    ],
                    "Image": "aws/codebuild/ubuntu-base:14.04",
                    "Type": "LINUX_CONTAINER"
                },
                "Name": {
                    "Fn::Sub": "Codebuild-${AWS::StackName}-setupTarget"
                },
                "ServiceRole": {
                    "Fn::GetAtt": [
                        "rCodeBuildServiceRole",
                        "Arn"
                    ]
                },
                "Source": {
                    "BuildSpec": "setup-target-schema.yml",
                    "Type": "CODEPIPELINE"
                },
                "Tags": [
                    {
                        "Key": "Key1",
                        "Value": "Value1"
                    },
                    {
                        "Key": "Key2",
                        "Value": "Value2"
                    }
                ],
                "TimeoutInMinutes": 60,
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Ref": "pCodeBuildSecurityGroup"
                        }
                    ],
                    "Subnets": [
                        {
                            "Ref": "pCodeBuildSubnet"
                        }
                    ],
                    "VpcId": {
                        "Ref": "pCodeBuildVPC"
                    }
                }
            }
        },
        "rApplicationCodeBuildProd": {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
                "Artifacts": {
                    "Type": "CODEPIPELINE"
                },
                "Description": "DMS project to run before Change Data Capture (CDC) starts",
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "EnvironmentVariables": [
                        {
                            "Name": "PGPASSWORD",
                            "Type": "PARAMETER_STORE",
                            "Value": {
                                "Ref": "rApplicationpRdsPassword"
                            }
                        },
                        {
                            "Name": "DB_NAME",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pRDSName"
                            }
                        },
                        {
                            "Name": "TARGET_ENDPOINT",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pRDSEndpoint"
                            }
                        },
                        {
                            "Name": "DB_USER",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pRDSUser"
                            }
                        },
                        {
                            "Name": "TASK_NAME",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "pTaskName"
                            }
                        }
                    ],
                    "Image": "aws/codebuild/ubuntu-base:14.04",
                    "Type": "LINUX_CONTAINER"
                },
                "Name": {
                    "Fn::Sub": "Codebuild-${AWS::StackName}-preCDC"
                },
                "ServiceRole": {
                    "Fn::GetAtt": [
                        "rCodeBuildServiceRole",
                        "Arn"
                    ]
                },
                "Source": {
                    "Type": "CODEPIPELINE",
                    "BuildSpec": "pre-CDC-build.yml"
                },
                "Tags": [
                    {
                        "Key": "Key1",
                        "Value": "Value1"
                    },
                    {
                        "Key": "Key2",
                        "Value": "Value2"
                    }
                ],
                "TimeoutInMinutes": 10,
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Ref": "pCodeBuildSecurityGroup"
                        }
                    ],
                    "Subnets": [
                        {
                            "Ref": "pCodeBuildSubnet"
                        }
                    ],
                    "VpcId": {
                        "Ref": "pCodeBuildVPC"
                    }
                }
            }
        },
        "rApplicationpRdsPassword": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
                "Description": "SSM Parameter for RDS Password.",
                "Name": {
                    "Fn::Sub": "DMS-${AWS::StackName}"
                },
                "Type": "String",
                "Value": {
                    "Ref": "pRDSPassword"
                }
            }
        },
        "rCodeBuildServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codebuild.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "Codebuild-${AWS::StackName}-${AWS::Region}-policy"
                        },
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/Codebuild-${AWS::StackName}*"
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:GetObject",
                                        "s3:GetBucketVersioning",
                                        "s3:GetObjectVersion"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:s3:::${rArtifactStoreS3Location}*"
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "dms:StartReplicationTask",
                                        "dms:CreateReplicationTask",
                                        "dms:CreateEventSubscription",
                                        "dms:Describe*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": "ssm:GetParameters",
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${rApplicationpRdsPassword}"
                                    }
                                },
                                {
                                    "Action": [
                                        "sns:GetTopicAttributes",
                                        "sns:Subscribe"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Ref": "rSnsApproval"
                                    }
                                },
                                {
                                    "Action": [
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DescribeDhcpOptions",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DeleteNetworkInterface",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:DescribeVpcs"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "ec2:CreateNetworkInterfacePermission"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "ec2:AuthorizedService": "codebuild.amazonaws.com",
                                            "ec2:Subnet": [
                                                {
                                                    "Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${pCodeBuildSubnet}"
                                                }
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*"
                                    }
                                }
                            ],
                            "Version": "2012-10-17"
                        }
                    }
                ]
            }
        },
        "rArtifactStoreS3Location": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Solution",
                        "Value": {
                            "Fn::Sub": "Artifact store for - ${AWS::StackName}"
                        }
                    }
                ],
                "VersioningConfiguration": {
                    "Status": "Enabled"
                }
            }
        },
        "rSnsApproval": {
            "Type": "AWS::SNS::Topic"
        },
        "rApplicationCodepipelineToken": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
                "Description": "SSM Parameter for CodePipeline token.",
                "Name": {
                    "Fn::Sub": "pCodePipelineToken-${AWS::StackName}"
                },
                "Type": "String",
                "Value": "default"
            }
        },
        "rApplicationLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "lambda-${AWS::StackName}-${AWS::Region}-policy"
                        },
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": "codepipeline:PutApprovalResult",
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "ssm:GetParameter",
                                        "ssm:PutParameter"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${rApplicationCodepipelineToken}"
                                    }
                                }
                            ],
                            "Version": "2012-10-17"
                        }
                    }
                ]
            }
        },
        "rApplicationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": "import boto3\nimport json\nimport os\nssm = boto3.client('ssm')\ncodepipeline = boto3.client('codepipeline')\nssm_parameter = os.environ['codepipeline_token']\npipeline_name = os.environ['pipeline_name']\ndef lambda_handler(event, context): \n    print(event)\n    str_subject = event['Records'][0]['Sns']['Subject']\n    if 'APPROVAL NEEDED' in str_subject:\n        print('This is a Codepipeline approval action')\n        str_sns = event['Records'][0]['Sns']['Message']\n        sns_msg = json.loads(str_sns)\n        pipeline = sns_msg['approval']['pipelineName']\n        stage = sns_msg['approval']['stageName']\n        action = sns_msg['approval']['actionName']\n        token = sns_msg['approval']['token']\n        approve_param =\"pipelineName='%s',stageName='%s',actionName='%s',token='%s'\" % ( pipeline , stage , action , token)\n        print(approve_param)\n        response = ssm.put_parameter(Name=ssm_parameter,\n            Value=approve_param,\n            Type='String',\n            Overwrite=True\n            )\n    elif 'DMS' in str_subject:\n        print('This is a message from DMS')\n        str_sns = event['Records'][0]['Sns']['Message']\n        if 'attempt' in str_sns:\n            print(str_sns)\n            print('Event notification nothing will be done')\n        else:\n            sns_msg = json.loads(str_sns)\n            print(sns_msg['Event Message'])\n            dms_status = sns_msg['Event Message']\n            if 'STOPPED_AFTER_FULL_LOAD' in dms_status:\n                print('DMS task replication is stopped after full load, proceeding to put an approval in Codepipeline')\n                result_pipeline('Approved')\n            elif 'started' in dms_status:\n                print('Lambda will do nothing at this step as the task is started')\n            elif 'Create' in dms_status:\n                print('Lambda will do nothing at this step as the task is created')\n            else:\n                print('DMS task did not stop or errored out after full load. Please check the task')\n                result_pipeline('Rejected')\n          \n    else:\n        print('This message is from neither Codepipeline Approval or DMS event. Nothing will be done')\n            \n    \ndef result_pipeline(event):\n    print('Getting Codepipeline parameters from SSM to put a %s' %(event))\n    codepipeline_params = ssm.get_parameter(Name=ssm_parameter)['Parameter']['Value'].split(\"'\")\n    print(codepipeline_params)\n    result_reponse = codepipeline.put_approval_result(\n        pipelineName=codepipeline_params[1],\n        stageName=codepipeline_params[3],\n        actionName=codepipeline_params[5],\n        result={\n            'summary': event,\n            'status': event\n        },\n        token=codepipeline_params[7]\n    )\n    print(result_reponse)\n"
                },
                "Environment": {
                    "Variables": {
                        "codepipeline_token": {
                            "Ref": "rApplicationCodepipelineToken"
                        },
                        "pipeline_name": {
                            "Ref": "rAppPipeline"
                        }
                    }
                },
                "Handler": "index.lambda_handler",
                "Runtime": "python3.6",
                "Role": {
                    "Fn::GetAtt": [
                        "rApplicationLambdaRole",
                        "Arn"
                    ]
                },
                "Timeout": 300
            }
        },
        "rLambdaPermissionGrantSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "rApplicationLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "sns.amazonaws.com",
                "SourceArn": {
                    "Ref": "rSnsApproval"
                }
            }
        },
        "rSnsSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
                "Protocol": "lambda",
                "Endpoint": {
                    "Fn::GetAtt": [
                        "rApplicationLambdaFunction",
                        "Arn"
                    ]
                },
                "TopicArn": {
                    "Ref": "rSnsApproval"
                }
            }
        },
        "rSnsTopicPolicy": {
            "Type": "AWS::SNS::TopicPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Id": "__default_policy_ID",
                    "Statement": [
                        {
                            "Sid": "__default_statement_ID",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": "*"
                            },
                            "Action": [
                                "SNS:GetTopicAttributes",
                                "SNS:SetTopicAttributes",
                                "SNS:AddPermission",
                                "SNS:RemovePermission",
                                "SNS:DeleteTopic",
                                "SNS:Subscribe",
                                "SNS:ListSubscriptionsByTopic",
                                "SNS:Publish",
                                "SNS:Receive"
                            ],
                            "Resource": "*",
                            "Condition": {
                                "StringEquals": {
                                    "AWS:SourceOwner": {
                                        "Ref": "AWS::AccountId"
                                    }
                                }
                            }
                        },
                        {
                            "Sid": "dms-allow-publish",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "dms.amazonaws.com"
                            },
                            "Action": "sns:Publish",
                            "Resource": {
                                "Ref": "rSnsApproval"
                            }
                        }
                    ]
                },
                "Topics": [
                    {
                        "Ref": "rSnsApproval"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "oApplicationPipeline": {
            "Description": "Pipeline for DMS tasks",
            "Value": {
                "Ref": "rAppPipeline"
            }
        },
        "oAppPipelineRole": {
            "Description": "IAM Role used by CodePipeline",
            "Value": {
                "Ref": "rAppPipelineRole"
            }
        },
        "oSnsTopicPolicy": {
            "Description": "SNS Topic Policy for DMS and CodePipeline Events",
            "Value": {
                "Ref": "rSnsTopicPolicy"
            }
        },
        "oSnsSubscription": {
            "Description": "SNS Subscription to Lambda function",
            "Value": {
                "Ref": "rSnsSubscription"
            }
        },
        "oApplicationLambdaFunction": {
            "Description": "Lambda function for Approval Stage",
            "Value": {
                "Ref": "rApplicationLambdaFunction"
            }
        },
        "oApplicationLambdaRole": {
            "Description": "IAM role used by Lambda function",
            "Value": {
                "Ref": "rApplicationLambdaRole"
            }
        },
        "oApplicationCodepipelineToken": {
            "Description": "Execution token for Codepipeline Approval stage",
            "Value": {
                "Ref": "rApplicationCodepipelineToken"
            }
        },
        "oSnsApproval": {
            "Description": "SNS Topic for DMS and CodePipeline events",
            "Value": {
                "Ref": "rSnsApproval"
            }
        },
        "oArtifactStoreS3Location": {
            "Description": "S3 bucket for Codepipeline artifacts",
            "Value": {
                "Ref": "rArtifactStoreS3Location"
            }
        },
        "oCodeBuildServiceRole": {
            "Description": "CodeBuild service role",
            "Value": {
                "Ref": "rCodeBuildServiceRole"
            }
        },
        "oApplicationCodeBuildProd": {
            "Description": "PreCDC CodeBuild Project",
            "Value": {
                "Ref": "rApplicationCodeBuildProd"
            }
        },
        "oApplicationCodeBuild": {
            "Description": "SetupTarget CodeBuild Project",
            "Value": {
                "Ref": "rApplicationCodeBuild"
            }
        }
    }
}
